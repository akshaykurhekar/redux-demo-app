{"version":3,"sources":["components/CounterControl/CounterControl.js","components/CounterOutput/CounterOutput.js","store/action/actionTypes.js","store/action/result.js","containers/Counter/Counter.js","store/action/counter.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/counter.js","store/reducers/result.js","index.js"],"names":["counterControl","props","className","onClick","clicked","label","counterOutput","value","Increment","Decrement","Add","Sub","Store_Result","Delete_Result","onStoreResult","result","dispatch","setTimeout","type","actionTypes","Counter","this","ctr","onIncrementCounter","onDecrementCounter","onAdd","onSub","style","width","height","color","borderRadius","font","storeResult","map","strResult","onDeleteResult","id","Component","connect","state","counter","res","actionCreator","resultId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldState","initialState","counterReducer","action","actionType","deleteResult","updatedArr","filter","resultReducer","concat","Date","rootReducer","combineReducers","CounterReducer","ResultReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","console","log","getState","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aec5c60b.chunk.js","sourcesContent":["import React from 'react';\n\nimport './CounterControl.css';\n\nconst counterControl = (props) => (\n    <div className=\"CounterControl\" onClick={props.clicked}>\n        {props.label}\n    </div>\n);\n\nexport default counterControl;","import React from 'react';\n\nimport './CounterOutput.css';\n\nconst counterOutput = (props) => (\n    <div className=\"CounterOutput\">\n        Current Counter: {props.value}\n    </div>\n);\n\nexport default counterOutput;","export const Increment = 'INCREMENT';\r\nexport const Decrement = 'DECREMENT';\r\nexport const Add = 'ADD';\r\nexport const Sub = 'SUB';\r\nexport const Store_Result = 'STORE_RESULT';\r\nexport const Delete_Result = 'DELETE_RESULT';\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const saveResult = (res) =>{\r\n    return {\r\n        type:actionTypes.Store_Result,\r\n        result: res\r\n    }\r\n}\r\n\r\nexport const onStoreResult = (result) =>{\r\n    return (dispatch) => {\r\n        // can change data old state \r\n      setTimeout( () => {\r\n            // const oldState = getState().res.result;\r\n            // console.log(oldState);          \r\n            dispatch(saveResult(result));\r\n      }, 1000)        \r\n    }\r\n}\r\n\r\nexport const onDeleteResult = (id) =>{\r\n    return{\r\n        type:actionTypes.Delete_Result,\r\n        resultId: id\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { connect} from 'react-redux';\n\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\nimport * as actionCreator from '../../store/action/index'; \n\n\nclass Counter extends Component {\n    \n    render () {\n        return (\n            <div>\n                <CounterOutput value={this.props.ctr} />\n                <CounterControl label=\"Increment\" clicked={ this.props.onIncrementCounter } />\n                <CounterControl label=\"Decrement\" clicked={this.props.onDecrementCounter }  />\n                <CounterControl label=\"Add 5\" clicked={this.props.onAdd }  />\n                <CounterControl label=\"Subtract 5\" clicked={this.props.onSub}  />\n                <hr/>\n                <button onClick={() => this.props.onStoreResult(this.props.ctr)} style={{width:\"60px\", height:\"30px\", color:\"red\", borderRadius:\"5px\", font:\"bold\" }}  >Store</button>\n                <ul>\n                    {this.props.storeResult.map(strResult => {\n                        // console.log(strResult.value)\n                      return  <li key={strResult.id } onClick={() => this.props.onDeleteResult(strResult.id) }>{strResult.value} </li>   \n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        ctr: state.ctr.counter,\n        storeResult: state.res.result\n    };\n};\n\nconst mapDispatchToProps = dispatch =>{\n    return{\n        onIncrementCounter: () => dispatch(actionCreator.increment()),\n        onDecrementCounter: () => dispatch(actionCreator.decrement()),\n        onAdd: () => dispatch(actionCreator.onAdd(5)),\n        onSub: () => dispatch(actionCreator.onSub(5)),\n        onStoreResult: (result) => dispatch(actionCreator.onStoreResult(result)),\n        onDeleteResult: (id) => dispatch(actionCreator.onDeleteResult(id))\n    };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps )(Counter);","import * as actionTypes from './actionTypes';\r\n\r\nexport const increment = () =>{\r\n    return{\r\n        type: actionTypes.Increment\r\n    }\r\n}\r\n\r\nexport const decrement = () =>{\r\n    return{\r\n        type:actionTypes.Decrement\r\n    }\r\n}\r\n\r\nexport const onAdd = (val) =>{\r\n    return{\r\n        type:actionTypes.Add,\r\n        value: val\r\n    }\r\n}\r\n\r\nexport const onSub = (val) =>{\r\n    return{\r\n        type:actionTypes.Sub,\r\n        value: val\r\n    }\r\n}","import Counter from \"./containers/Counter/Counter\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Counter />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldState, updateObject) =>{\r\n    return {\r\n        ...oldState,\r\n        ...updateObject\r\n    };\r\n};","import * as actionType from \"../action/actionTypes\";\r\nimport {updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    counter: 0,\r\n}\r\n\r\nconst counterReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n        case actionType.Increment :\r\n            return updateObject(state, {counter: state.counter + 1});\r\n        case actionType.Decrement:\r\n            return updateObject(state, {counter: state.counter - 1});\r\n        case actionType.Add:\r\n            return updateObject(state, {counter: state.counter + action.value});\r\n        case actionType.Sub:\r\n            return updateObject(state, {counter: state.counter - action.value})\r\n        default: break\r\n    }    \r\n    return state;\r\n}\r\n\r\nexport default counterReducer;","import * as actionType from \"../action/actionTypes\";\r\nimport  { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    result: []\r\n}\r\n\r\nconst deleteResult = (state, action) =>{\r\n    const updatedArr = state.result.filter(result => result.id !== action.resultId);\r\n    return updateObject(state, {result: updatedArr});\r\n}\r\n\r\nconst resultReducer = (state = initialState, action) =>{\r\n\r\n    switch (action.type) {\r\n       \r\n        case actionType.Store_Result: return updateObject(state, {result: state.result.concat({id: new Date(), value:action.result})});\r\n        case actionType.Delete_Result: return deleteResult(state, action);\r\n        default: break       \r\n    }    \r\n    return state;\r\n}\r\n\r\nexport default resultReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CounterReducer from \"./store/reducers/counter\";\nimport ResultReducer from \"./store/reducers/result\";\n\nconst rootReducer = combineReducers({\n    ctr: CounterReducer,\n    res: ResultReducer\n})\n\nconst loggerMiddleware = store =>{\n    return next =>{\n        return action =>{\n            console.log(\"[Middleware dispatching:] \",action);\n            console.log(\"[Middleware state:]\", store.getState())\n            const result = next(action)\n            return result;\n        }\n    };\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // google chrome redux devTool setup\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(loggerMiddleware, thunk)) );  // applying middleware to store \n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store} ><App /></Provider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}